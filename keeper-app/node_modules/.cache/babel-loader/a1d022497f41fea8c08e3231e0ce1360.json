{"ast":null,"code":"import _defineProperty from \"E:\\\\ReactJS\\\\ReactJS\\\\keeper-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"E:\\\\ReactJS\\\\ReactJS\\\\keeper-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:\\\\ReactJS\\\\ReactJS\\\\keeper-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\ReactJS\\\\ReactJS\\\\keeper-app\\\\src\\\\components\\\\CreateNote.js\";\nimport React, { useState } from \"react\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport Fab from \"@mui/material/Fab\";\nimport Zoom from \"@mui/material/Zoom\";\n\nfunction CreateNote(props) {\n  var _useState = useState({\n    title: \"\",\n    content: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      notes = _useState2[0],\n      setNotes = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isExpand = _useState4[0],\n      setExpand = _useState4[1];\n\n  function handleChange(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value; //console.log(name, value);name--title/content; value--user entered text in title/content\n\n    setNotes(function (prevNotes) {\n      return _objectSpread(_objectSpread({}, prevNotes), {}, _defineProperty({}, name, value));\n    });\n  } //send data return to app.js using recieved function(onAdd)\n\n\n  function handleSubmit(event) {\n    props.onAdd(notes); //passed notes to app.js\n    //To make text field empty\n\n    setNotes({\n      title: \"\",\n      content: \"\"\n    });\n    event.preventDefault(); //To prevent default browsing/refreshing of form\n  } //can use as arrow function directly for onSubmit event.\n\n\n  function expand() {\n    setExpand(false);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"create-note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, isExpand && /*#__PURE__*/React.createElement(\"input\", {\n    name: \"title\",\n    placeholder: \"Title\",\n    onChange: handleChange,\n    value: notes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"content\",\n    placeholder: \"Take a note..\",\n    onClick: expand,\n    onChange: handleChange,\n    rows: isExpand ? 3 : 1,\n    value: notes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Zoom, {\n    in: isExpand ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Fab, {\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default CreateNote;\n/*Used directly in App.js using Arrow function */","map":{"version":3,"sources":["E:/ReactJS/ReactJS/keeper-app/src/components/CreateNote.js"],"names":["React","useState","AddIcon","Fab","Zoom","CreateNote","props","title","content","notes","setNotes","isExpand","setExpand","handleChange","event","target","name","value","prevNotes","handleSubmit","onAdd","preventDefault","expand"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,kBAA0BL,QAAQ,CAAC;AACjCM,IAAAA,KAAK,EAAE,EAD0B;AAEjCC,IAAAA,OAAO,EAAE;AAFwB,GAAD,CAAlC;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AAKA,mBAA8BT,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOU,QAAP;AAAA,MAAiBC,SAAjB;;AAEA,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,wBAAwBA,KAAK,CAACC,MAA9B;AAAA,QAAQC,IAAR,iBAAQA,IAAR;AAAA,QAAcC,KAAd,iBAAcA,KAAd,CAD2B,CAE3B;;AAEAP,IAAAA,QAAQ,CAAC,UAACQ,SAAD;AAAA,6CAAqBA,SAArB,2BAAiCF,IAAjC,EAAwCC,KAAxC;AAAA,KAAD,CAAR;AACD,GAbwB,CAezB;;;AACA,WAASE,YAAT,CAAsBL,KAAtB,EAA6B;AAC3BR,IAAAA,KAAK,CAACc,KAAN,CAAYX,KAAZ,EAD2B,CACP;AAEpB;;AACAC,IAAAA,QAAQ,CAAC;AACPH,MAAAA,KAAK,EAAE,EADA;AAEPC,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAKAM,IAAAA,KAAK,CAACO,cAAN,GAT2B,CASH;AACzB,GA1BwB,CA0BvB;;;AAEF,WAASC,MAAT,GAAkB;AAChBV,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QAAQ,iBACP;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,WAAW,EAAC,OAFd;AAGE,IAAA,QAAQ,EAAEE,YAHZ;AAIE,IAAA,KAAK,EAAEJ,KAAK,CAACF,KAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eASE;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,WAAW,EAAC,eAFd;AAGE,IAAA,OAAO,EAAEe,MAHX;AAIE,IAAA,QAAQ,EAAET,YAJZ;AAKE,IAAA,IAAI,EAAEF,QAAQ,GAAG,CAAH,GAAO,CALvB;AAME,IAAA,KAAK,EAAEF,KAAK,CAACD,OANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,eAiBE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAEG,QAAQ,GAAG,IAAH,GAAU,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAEQ,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAjBF,CADF,CADF;AA2BD;;AAED,eAAed,UAAf;AACA","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport Fab from \"@mui/material/Fab\";\r\nimport Zoom from \"@mui/material/Zoom\";\r\n\r\nfunction CreateNote(props) {\r\n  const [notes, setNotes] = useState({\r\n    title: \"\",\r\n    content: \"\",\r\n  });\r\n\r\n  const [isExpand, setExpand] = useState(false);\r\n\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n    //console.log(name, value);name--title/content; value--user entered text in title/content\r\n\r\n    setNotes((prevNotes) => ({ ...prevNotes, [name]: value }));\r\n  }\r\n\r\n  //send data return to app.js using recieved function(onAdd)\r\n  function handleSubmit(event) {\r\n    props.onAdd(notes); //passed notes to app.js\r\n\r\n    //To make text field empty\r\n    setNotes({\r\n      title: \"\",\r\n      content: \"\",\r\n    });\r\n\r\n    event.preventDefault(); //To prevent default browsing/refreshing of form\r\n  } //can use as arrow function directly for onSubmit event.\r\n\r\n  function expand() {\r\n    setExpand(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"create-note\">\r\n        {isExpand && (\r\n          <input\r\n            name=\"title\"\r\n            placeholder=\"Title\"\r\n            onChange={handleChange}\r\n            value={notes.title}\r\n          />\r\n        )}\r\n        <textarea\r\n          name=\"content\"\r\n          placeholder=\"Take a note..\"\r\n          onClick={expand}\r\n          onChange={handleChange}\r\n          rows={isExpand ? 3 : 1}\r\n          value={notes.content}\r\n        />\r\n        <Zoom in={isExpand ? true : false}>\r\n          <Fab onClick={handleSubmit}>\r\n            <AddIcon />\r\n          </Fab>\r\n        </Zoom>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateNote;\r\n/*Used directly in App.js using Arrow function */\r\n"]},"metadata":{},"sourceType":"module"}