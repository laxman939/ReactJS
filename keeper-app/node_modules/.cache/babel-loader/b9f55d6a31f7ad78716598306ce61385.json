{"ast":null,"code":"import _defineProperty from \"E:\\\\ReactJS\\\\ReactJS\\\\keeper-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"E:\\\\ReactJS\\\\ReactJS\\\\keeper-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:\\\\ReactJS\\\\ReactJS\\\\keeper-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\ReactJS\\\\ReactJS\\\\keeper-app\\\\src\\\\components\\\\CreateNote.js\";\nimport React, { useState } from \"react\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport Fab from \"@mui/material/Fab\";\n\nfunction CreateNote(props) {\n  var _useState = useState({\n    title: \"\",\n    content: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      notes = _useState2[0],\n      setNotes = _useState2[1];\n\n  function handleChange(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value; //console.log(name, value);name--title/content; value--user entered text in title/content\n\n    setNotes(function (prevNotes) {\n      return _objectSpread(_objectSpread({}, prevNotes), {}, _defineProperty({}, name, value));\n    });\n  } //send data return to app.js using recieved function(onAdd)\n\n\n  function handleSubmit(event) {\n    props.onAdd(notes); //passed notes to app.js\n    //To make text field empty\n\n    setNotes({\n      title: \"\",\n      content: \"\"\n    });\n    event.preventDefault(); //To prevent default browsing/refreshing of form\n  } //can use as arrow function directly for onSubmit event\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"create-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"title\",\n    placeholder: \"Title\",\n    onChange: handleChange,\n    value: notes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"content\",\n    placeholder: \"Take a note..\",\n    onChange: handleChange,\n    rows: \"3\",\n    value: notes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Fab, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default CreateNote;\n/*Used directly in App.js using Arrow function */","map":{"version":3,"sources":["E:/ReactJS/ReactJS/keeper-app/src/components/CreateNote.js"],"names":["React","useState","AddIcon","Fab","CreateNote","props","title","content","notes","setNotes","handleChange","event","target","name","value","prevNotes","handleSubmit","onAdd","preventDefault"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,kBAA0BJ,QAAQ,CAAC;AACjCK,IAAAA,KAAK,EAAE,EAD0B;AAEjCC,IAAAA,OAAO,EAAE;AAFwB,GAAD,CAAlC;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AAKA,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,wBAAwBA,KAAK,CAACC,MAA9B;AAAA,QAAQC,IAAR,iBAAQA,IAAR;AAAA,QAAcC,KAAd,iBAAcA,KAAd,CAD2B,CAE3B;;AAEAL,IAAAA,QAAQ,CAAC,UAACM,SAAD;AAAA,6CAAqBA,SAArB,2BAAiCF,IAAjC,EAAwCC,KAAxC;AAAA,KAAD,CAAR;AACD,GAXwB,CAazB;;;AACA,WAASE,YAAT,CAAsBL,KAAtB,EAA6B;AAC3BN,IAAAA,KAAK,CAACY,KAAN,CAAYT,KAAZ,EAD2B,CACP;AAEpB;;AACAC,IAAAA,QAAQ,CAAC;AACPH,MAAAA,KAAK,EAAE,EADA;AAEPC,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAKAI,IAAAA,KAAK,CAACO,cAAN,GAT2B,CASH;AACzB,GAxBwB,CAwBvB;;;AAEF,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,aAAhB;AAA8B,IAAA,QAAQ,EAAEF,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,WAAW,EAAC,OAFd;AAGE,IAAA,QAAQ,EAAEN,YAHZ;AAIE,IAAA,KAAK,EAAEF,KAAK,CAACF,KAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,WAAW,EAAC,eAFd;AAGE,IAAA,QAAQ,EAAEI,YAHZ;AAIE,IAAA,IAAI,EAAC,GAJP;AAKE,IAAA,KAAK,EAAEF,KAAK,CAACD,OALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAcE,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAdF,CADF,CADF;AAsBD;;AAED,eAAeH,UAAf;AACA","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport Fab from \"@mui/material/Fab\";\r\n\r\nfunction CreateNote(props) {\r\n  const [notes, setNotes] = useState({\r\n    title: \"\",\r\n    content: \"\",\r\n  });\r\n\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n    //console.log(name, value);name--title/content; value--user entered text in title/content\r\n\r\n    setNotes((prevNotes) => ({ ...prevNotes, [name]: value }));\r\n  }\r\n\r\n  //send data return to app.js using recieved function(onAdd)\r\n  function handleSubmit(event) {\r\n    props.onAdd(notes); //passed notes to app.js\r\n\r\n    //To make text field empty\r\n    setNotes({\r\n      title: \"\",\r\n      content: \"\",\r\n    });\r\n\r\n    event.preventDefault(); //To prevent default browsing/refreshing of form\r\n  } //can use as arrow function directly for onSubmit event\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"create-form\" onSubmit={handleSubmit}>\r\n        <input\r\n          name=\"title\"\r\n          placeholder=\"Title\"\r\n          onChange={handleChange}\r\n          value={notes.title}\r\n        />\r\n        <textarea\r\n          name=\"content\"\r\n          placeholder=\"Take a note..\"\r\n          onChange={handleChange}\r\n          rows=\"3\"\r\n          value={notes.content}\r\n        />\r\n        <Fab type=\"submit\">\r\n          <AddIcon />\r\n        </Fab>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateNote;\r\n/*Used directly in App.js using Arrow function */\r\n"]},"metadata":{},"sourceType":"module"}